worker_processes auto;

# Run as non-root user
user appuser appgroup;

events {
    worker_connections 1024;
}

http {
    # Basic settings
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Caching
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    }

    server {
        listen 7333;
        server_name localhost;
        
        root /usr/share/nginx/html;
        
        # Enable expires
        expires $expires;

        # Root redirect
        location = / {
            return 301 /viewer/;
        }

        # Handle /viewer/ path
        location /viewer/ {
            alias /usr/share/nginx/html/viewer/;
            try_files $uri $uri/ /viewer/index.html;
            
            # Cache control for static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
                expires 1y;
                add_header Cache-Control "public, no-transform";
            }
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }

    # Access and error logs
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}
